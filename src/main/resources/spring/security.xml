<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/security"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="ru.originald.security"/>


    <http auto-config="true" entry-point-ref="restAuthenticationEntryPoint">
        <csrf disabled="true"/>
        <access-denied-handler ref="accessDeniedHandler"/>

        <intercept-url pattern="/api/users/**" access="isAuthenticated()"/>
        <intercept-url pattern="/api/admin/**" access="hasRole('ROLE_ADMIN')"/>

        <form-login login-processing-url="/api/login"
                    username-parameter="username"
                    password-parameter="password"
                    authentication-success-handler-ref="SuccessHandler"
                    authentication-failure-handler-ref="FailureHandler"/>
        <logout logout-url="/api/logout"
        success-handler-ref="logoutSuccessHandler"/>
    </http>
    <beans:bean id="restAuthenticationEntryPoint" class="ru.originald.security.RestAuthenticationEntryPoint"/>

    <beans:bean id="SuccessHandler" class="ru.originald.security.RestAuthenticationSuccessHandler"/>
    <beans:bean id="FailureHandler" class="ru.originald.security.RestAuthenticationFailureHandler"/>


    <beans:bean id="logoutSuccessHandler"
                class="ru.originald.security.RestLogoutSuccessHandler"/>

    <beans:bean id="accessDeniedHandler"
                class="ru.originald.security.RestAuthenticationAccessDeniedHandler"/>

    <beans:bean id="jdbcUserDetailsManager"
                class="org.springframework.security.provisioning.JdbcUserDetailsManager"
                p:usersByUsernameQuery="
                    SELECT username, password, 'true'
                    FROM users
                    WHERE username=?;"
                p:authoritiesByUsernameQuery="
                    SELECT username, role
                    FROM users
                    WHERE username=?;">
        <beans:property name="dataSource" ref="dataSource"/>
        <!--<beans:property name="authenticationManager" ref="authenticationManager"/>-->
    </beans:bean>

    <beans:bean id="BCrypt"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="10"/>
    </beans:bean>


    <beans:bean id="preAuthAuthProvider"
                class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
        <beans:property name="preAuthenticatedUserDetailsService">
            <beans:bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <beans:property name="userDetailsService" ref="jdbcUserDetailsManager"/>
            </beans:bean>
        </beans:property>
    </beans:bean>


    <!-- Authentication manager -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="jdbcUserDetailsManager">
            <password-encoder ref="BCrypt"/>
        </authentication-provider>
    </authentication-manager>


</beans:beans>
